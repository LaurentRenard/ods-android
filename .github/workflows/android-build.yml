name: android-build

on:
  push:
    branches:
      - master
      - develop
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    types:
      - opened
      - synchronize
      - labeled
      - unlabeled

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up our JDK environment
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up signing configuration
        uses: ./.github/actions/setup-signing
        with:
          keystore: ${{ secrets.SIGNING_KEYSTORE }}
          store-password: ${{ secrets.SIGNING_STORE_PASSWORD }}
          key-alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          key-password: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Run Android Linter
        run: ./gradlew lintDebug

      - name: Build
        run: |
          # Git SHA is equal to github.event.pull_request.head.sha for pull requests
          # This value is unset if workflow has not been triggered by a pull request, use GITHUB_SHA instead
          BRANCH_SHA=${{ github.event.pull_request.head.sha }}
          COMMIT_SHA=${BRANCH_SHA:-$GITHUB_SHA}
          ./gradlew assemble -PversionNameSuffix="-${COMMIT_SHA::7}" -PversionCode=$GITHUB_RUN_NUMBER --stacktrace

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: library
          path:
            demo/build/outputs/apk/*/*.apk
            lib/build/outputs/aar/*.aar
            theme-contract/build/outputs/aar/*.aar
            theme-innovation-cup/build/outputs/aar/*.aar
            theme-orange/build/outputs/aar/*.aar

  maven-central-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: build
    environment:
      name: maven-central-release
      url: https://mvnrepository.com/artifact/com.orange.ods.android
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up our JDK environment
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up signing configuration
        uses: ./.github/actions/setup-signing
        with:
          keystore: ${{ secrets.SIGNING_KEYSTORE }}
          store-password: ${{ secrets.SIGNING_STORE_PASSWORD }}
          key-alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          key-password: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Publish release to Maven Central
        env:
          GNUPG_SIGNING_KEY_ID: ${{ secrets.GNUPG_SIGNING_KEY_ID }}
          GNUPG_SIGNING_PASSWORD: ${{ secrets.GNUPG_SIGNING_PASSWORD }}
          GNUPG_SIGNING_SECRET_KEY: ${{ secrets.GNUPG_SIGNING_SECRET_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: ./gradlew publish

  github-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: build
    environment:
      name: github-release
      url: https://github.com/Orange-OpenSource/ods-android/releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up our JDK environment
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up signing configuration
        uses: ./.github/actions/setup-signing
        with:
          keystore: ${{ secrets.SIGNING_KEYSTORE }}
          store-password: ${{ secrets.SIGNING_STORE_PASSWORD }}
          key-alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          key-password: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Publish release to GitHub
        run: ./gradlew publishToGitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  app-distribution-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: build
    environment:
      name: app-distribution-release
      url: https://appdistribution.firebase.google.com/testerapps
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up our JDK environment
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up signing configuration
        uses: ./.github/actions/setup-signing
        with:
          keystore: ${{ secrets.SIGNING_KEYSTORE }}
          store-password: ${{ secrets.SIGNING_STORE_PASSWORD }}
          key-alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          key-password: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Upload APK to Firebase App Distribution
        uses: ./.github/actions/app-distribution
        with:
          git-tag-prefix: 'ci/release-demo'
          group: 'ods-demo-android'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}
